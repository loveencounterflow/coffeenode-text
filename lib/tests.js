// Generated by CoffeeScript 1.7.1
(function() {
  var TEXT, TRM, assert, custom_fill_in, data, formats, log, template, templates, _i, _j, _len, _len1;

  TEXT = require('./main');

  TRM = require('coffeenode-trm');

  log = TRM.log.bind(TRM);

  assert = require('assert');

  this.main = function() {
    return this.test_lines_splitting();
  };

  this.test_lines_splitting = function() {
    assert.deepEqual(TEXT.lines_of('helo world'), ['helo world']);
    assert.deepEqual(TEXT.lines_of('helo world\n'), ['helo world', '']);
    assert.deepEqual(TEXT.lines_of('helo world\nhowdy'), ['helo world', 'howdy']);
    assert.deepEqual(TEXT.lines_of('helo world\rhowdy'), ['helo world', 'howdy']);
    assert.deepEqual(TEXT.lines_of('helo world\r\nhowdy'), ['helo world', 'howdy']);
    assert.deepEqual(TEXT.lines_of('helo world\n\rhowdy'), ['helo world', '', 'howdy']);
    assert.deepEqual(TEXT.lines_of('\nhelo world\n\rhowdy'), ['', 'helo world', '', 'howdy']);
    return assert.deepEqual(TEXT.lines_of('a\u0085b\u2028c\u2029d'), ['a', 'b', 'c', 'd']);
  };

  throw new Error("work in progress");

  templates = ["helo name", "helo ${name}", "helo \\${name}", "helo ${{name}}", "helo ${name:quoted}", "helo $name:quoted", "helo $name!", "helo +name!", "helo +(name:quoted)!", "helo !+name!", "helo !+(name:quoted)!"];

  data = {
    'name': 'Jim'
  };

  formats = {
    'quoted': function(text) {
      return '"' + text + '"';
    }
  };

  for (_i = 0, _len = templates.length; _i < _len; _i++) {
    template = templates[_i];
    log(TRM.green('A'), TRM.grey(template), TRM.gold(this.fill_in(template, data, formats)));
  }

  custom_fill_in = this.fill_in.create(null, '+', '(', ')', '~', '!');

  for (_j = 0, _len1 = templates.length; _j < _len1; _j++) {
    template = templates[_j];
    log(TRM.red('B'), TRM.grey(template), TRM.gold(custom_fill_in(template, data, formats)));
  }

  this.main();

}).call(this);
